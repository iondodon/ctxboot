// Code generated by ctxboot; DO NOT EDIT.

package main

import (
	"github.com/iondodon/ctxboot"
	"reflect"
	"log"
	
	database "github.com/iondodon/ctxboot/examples/di/database"
	
	repository2 "github.com/iondodon/ctxboot/examples/di/repository"
	
)

func init() {
	cc := ctxboot.Boot()
	
	// Register components in dependency order
	
	// Register database.Database
	if err := cc.SetComponent(reflect.TypeOf((*database.Database)(nil)), &database.Database{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "database.Database", err)
	}
	
	// Register UserService
	if err := cc.SetComponent(reflect.TypeOf((*UserService)(nil)), &UserService{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "UserService", err)
	}
	
	// Register repository2.UserRepository
	if err := cc.SetComponent(reflect.TypeOf((*repository2.UserRepository)(nil)), &repository2.UserRepository{}); err != nil {
		log.Fatalf("Failed to register component %s: %v", "repository2.UserRepository", err)
	}
	
	
	// Initialize all components after registration
	if err := cc.InitializeComponents(); err != nil {
		log.Fatalf("Failed to initialize components: %v", err)
	}
}
